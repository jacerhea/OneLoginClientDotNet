<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OneLogin.Client</name>
    </assembly>
    <members>
        <member name="M:OneLogin.Converters.JsonConverterObjectToString.CanConvert(System.Type)">
            <summary>
            Can convert object to json object
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.Converters.JsonConverterObjectToString.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.Converters.JsonConverterObjectToString.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write json to JsonWriter
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:OneLogin.Endpoints">
            <summary>
            Set of OneLogin Resource endpoints.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OneLogin.Endpoints.Token" -->
        <!-- Badly formed XML comment ignored for member "F:OneLogin.Endpoints.ONELOGIN_USERS" -->
        <!-- Badly formed XML comment ignored for member "F:OneLogin.Endpoints.ONELOGIN_GROUPS" -->
        <!-- Badly formed XML comment ignored for member "F:OneLogin.Endpoints.ONELOGIN_EVENTS" -->
        <!-- Badly formed XML comment ignored for member "F:OneLogin.Endpoints.ONELOGIN_INVITES" -->
        <!-- Badly formed XML comment ignored for member "F:OneLogin.Endpoints.ONELOGIN_ROLES" -->
        <member name="T:OneLogin.OneLoginClient">
            <summary>
            A client class to access the OneLogin API /1
            https://developers.onelogin.com/api-docs/1/getting-started/dev-overview
            </summary>
        </member>
        <member name="M:OneLogin.OneLoginClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OneLogin.OneLoginClient"/> class.
            </summary>
            <param name="clientId">The client id to connect with.</param>
            <param name="clientSecret">The client secret to connect with.</param>
            <param name="region"></param>
            <example>
            <code>
            var client = new OneLoginClient("client id", "client secret")
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">clientId</exception>
            <exception cref="T:System.ArgumentNullException">clientSecret</exception>
        </member>
        <member name="M:OneLogin.OneLoginClient.GenerateTokens">
            <summary>
            Generate an access token and refresh token that you can use to call our resource APIs.
            For an overview of the authorization flow, see Authorizing Resource API Calls.
            Once generated, an access token is valid for 10 hours.
            <a href="https://developers.onelogin.com/api-docs/1/oauth20-tokens/generate-tokens-2">Documentation</a>.
            </summary>
            <returns>Returns the serialized <see cref="T:OneLogin.Responses.GenerateTokensResponse"/> as an asynchronous operation.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetNextPages``1(``0,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="pages"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetPreviousPages``1(``0,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="pages"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetEventTypes">
            <summary>
            This call returns a list of all OneLogin event types available to the Events API, providing event type names, event type IDs, and descriptions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetEvents(System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            An event that was recorded in OneLogin.
            </summary>
            <param name="clientId">Client ID used to generate the access token that made the API call that generated the event.</param>
            <param name="createdAt">Time and date at which the event was created. This value is autogenerated by OneLogin.</param>
            <param name="directoryId"></param>
            <param name="eventTypeId">Type of event triggered.</param>
            <param name="id">Event’s unique ID in OneLogin. Autogenerated by OneLogin.</param>
            <param name="resolution"></param>
            <param name="since"></param>
            <param name="until"></param>
            <param name="userId">ID of the user that was acted upon to trigger the event.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetEventById(System.Int64)">
            <summary>
            An event that was recorded in OneLogin.
            </summary>
            <param name="id">Set to the id of the event that you want to return. If you don’t know the event’s  id, use the Get Events API call to return all events and their id values.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.CreateEvent(OneLogin.Requests.CreateEventRequest)">
            <summary>
            Use to create an event in the OneLogin event log.
            From individual user actions, to administrative operations, provisioning, and OTP device registration, everything that happens within your OneLogin account can be tracked.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetGroups">
            <summary>
            Use to get a list of groups that are available in your account. The call returns up to 50 groups per page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetGroup(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">Set to the group’s ID with .xml appended. For example, 123456.xml. If you don’t know the group’s id, use the Get all groups API call to return all groups and their id values.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GenerateInviteLink(System.String)">
            <summary>
            Generate an invite link for a user that you have already created in your OneLogin account.
            </summary>
            <param name="email">Set to the email address of the user that you want to generate an invite link for.</param>
            <returns>Provide the link to the user to enable her to set her password and then access your OneLogin portal.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.SendInviteLink(System.String,System.String)">
            <summary>
            Send an invite link to a user that you have already created in your OneLogin account.
            </summary>
            <param name="email">Set to the email address of the user that you want to generate an invite link for.</param>
            <param name="personalEmail">If you want to send the invite email to an email other than the one provided in  email, provide it here. The invite link will be sent to this address instead.</param>
            <returns>The user can click the link to set his password and access your OneLogin portal.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetAvailableAuthenticationFactors(System.Int32)">
            <summary>
            Use this API to return a list of authentication factors that are available for user enrollment via API.
            </summary>
            <param name="userId">Set to the id of the user.</param>
            <returns>Returns the serialized <see cref="T:OneLogin.Responses.GetAvailableAuthenticationFactorsResponse"/> as an asynchronous operation.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.EnrollAnAuthenticationFactor(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Use this API to enroll a user with a given authentication factor.
            If the authentication factor requires confirmation to complete, then the device will have an active state of false otherwise it will have an active state of true (corresponding to devices that are either pending confirmation or not)
            To change the active state of the device to true, the OTP device’s id would need to be supplied to the Activate a Factor endpoint.Then the `otp_code` would need to be sent to the Verify a Factor endpoint.
            </summary>
            <param name="userId">Set to the id of the user.</param>
            <param name="factorId">The identifier of the factor to enroll the user with.</param>
            <param name="displayName">A name for the users device</param>
            <param name="number">The phone number of the user in E.164 format.</param>
            <returns>Returns the serialized <see cref="T:OneLogin.Responses.EnrollAnAuthenticationFactorResponse"/> as an asynchronous operation.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetEnrolledAuthenticationFactors(System.Int32)">
            <summary>
            Use this API to return a list of authentication factors registered to a particular user for multifactor authentication (MFA). The list includes devices that are enabled (used successfully for authentication at least once) or pending enablement (registered but never used).
            This API is typically used in a login workflow in which MFA is required, providing the user a selection of their registered MFA devices to choose from. The returned list represents the authentication factors that have been registered by the user on their Profile page or on the OneLogin login page or custom login page.
            </summary>
            <param name="userId">Set to the id of the user.</param>
            <returns>Returns the serialized <see cref="T:OneLogin.Responses.GetEnrolledAuthenticationFactorResponse"/> as an asynchronous operation.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.ActivateAnAuthenticationFactor(System.Int32,System.Int32)">
            <summary>
            Use this API to return a list of authentication factors registered to a particular user for multifactor authentication (MFA). The list includes devices that are enabled (used successfully for authentication at least once) or pending enablement (registered but never used).
            This API is typically used in a login workflow in which MFA is required, providing the user a selection of their registered MFA devices to choose from. The returned list represents the authentication factors that have been registered by the user on their Profile page or on the OneLogin login page or custom login page.
            </summary>
            <param name="userId">Set to the id of the user.</param>
            <param name="deviceId">Set to the device_id of the MFA device.</param>
            <returns>Returns the serialized <see cref="T:OneLogin.Responses.GetEnrolledAuthenticationFactorResponse"/> as an asynchronous operation.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.VerifyAnAuthenticationFactor(System.Int32,System.Int32,OneLogin.Requests.VerifyAnAuthenticationFactorRequest)">
            <summary>
            Use this API to authenticate a one-time password (OTP) code provided by a multifactor authentication (MFA) device.
            If this is the first time that the OTP device has been confirmed, then the device will be updated to have a state of enabled.
            </summary>
            <param name="userId">Set to the id of the user.</param>
            <param name="deviceId">Set to the device_id of the MFA device.</param>
            <param name="request"></param>
            <returns>Returns the serialized <see cref="T:OneLogin.Responses.GetEnrolledAuthenticationFactorResponse"/> as an asynchronous operation.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.RemoveAFactor(System.Int32,System.Int32)">
            <summary>
            Use this API to authenticate a one-time password (OTP) code provided by a multifactor authentication (MFA) device.
            If this is the first time that the OTP device has been confirmed, then the device will be updated to have a state of enabled.
            </summary>
            <param name="userId">Set to the id of the user.</param>
            <param name="deviceId">Set to the device_id of the MFA device.</param>
            <returns>Returns the serialized <see cref="T:OneLogin.Responses.GetEnrolledAuthenticationFactorResponse"/> as an asynchronous operation.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetRole(System.Int32)">
            <summary>
            Use this call to get a role by ID.
            </summary>
            <param name="id">Set to the id of the role that you want to return. If you don’t know the role’s  id, use the Get Roles API call to return all roles and their id values.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetRoles">
            <summary>
            This call returns up to 50 roles per page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetUsers(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Get all of the users registered with OneLogin filtered by the given parameters.
            https://developers.onelogin.com/api-docs/1/users/get-users
            </summary>
            <returns>Returns the serialized <see cref="T:OneLogin.Responses.GetUsersResponse"/> as an asynchronous operation.</returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetUserById(System.Int32)">
            <summary>
            Get the Onelogin user.
            </summary>
            <param name="userId">the id of the user that you want to return.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetAppsForUser(System.Int32)">
            <summary>
            Get a list of apps accessible by a user, not including personal apps.
            https://developers.onelogin.com/api-docs/1/users/get-apps-for-user
            </summary>
            <param name="userId">Set to the id of the user that you want to return.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetRolesForUser(System.Int32)">
            <summary>
            Get a list of role IDs that have been assigned to a user.
            </summary>
            <param name="userId">Set to the id of the user for which you want to return a list of assigned roles.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.GetCustomAttributes">
            <summary>
            Returns a list of all custom attribute fields (also known as custom user fields) that have been defined for your account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.CreateUser(OneLogin.Requests.CreateUserRequest)">
            <summary>
            Creates a onelogin user account.
            </summary>
            <param name="request">The request object.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.UpdateUserById(System.Int32,OneLogin.Requests.UpdateUserByIdRequest)">
            <summary>
            Updates a onelogin user account.
            </summary>
            <param name="userId">Set to the id of the user which you want to update.</param>
            <param name="byIdRequest">The request object.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.AssignRoleToUser(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Assign one or more existing roles to a user.
            </summary>
            <param name="userId">Set to the id of the user to which you want to assign a role. If you don’t know the user’s id, use the Get Users API call to return all users and their id values.</param>
            <param name="roleIds">An array of one or more role IDs. The IDs must be positive integers.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.RemoveRoleFromUser(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Remove one or more existing roles from a user. This API will not remove roles that were added to a user via mapping or provisioning.
            </summary>
            <param name="userId">Set to the id of the user for whom you want to remove a role. If you don’t know the user’s id, use the Get Users API call to return all users and their id values.</param>
            <param name="roleIds">An array of one or more role IDs. The IDs must be positive integers.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.SetPasswordByIdUsingCleartext(System.Int32,System.String,System.Boolean)">
            <summary>
            Initially set or subsequently change a user’s password.
            Note that setting a user password using cleartext via this API is comparable to using our in-browser, form-based Change Password functionality on top of an encrypted channel.
            Note also that when you set a password via this API, the password change must comply with your third-party user directory’s password policy for the user.
            </summary>
            <param name="userId">Set to the id of the user for which you want to set or reset a password. If you don’t know the user’s id, use the Get Users API call to return all users and their  id values.</param>
            <param name="password">Set to the password value using cleartext.
            Hashes are never stored as cleartext. They are stored securely using cryptographic hash. OneLogin continuously upgrades the strength of the hash. Ensure that the value meets the password strength requirements set for the account.
            </param>
            <param name="validatePolicy">Defaults to false. This will validate the password against the users OneLogin password policy.</param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.SetPasswordByIdUsingSaltAndSHA256(System.Int32,OneLogin.Requests.SetPasswordByIdUsingSaltAndSHA256)">
            <summary>
            Initially set or subsequently change a user’s password.
            Note that this API cannot verify that the password value supplied meets the password complexity requirements set for the user’s account.If this is a concern, and you use a third-party directory like AD or LDAP, you can use the cleartext version of this API, which can update the password in a third-party directory directly, and enforces the password complexity requirements of the third-party directory.
            </summary>
            <param name="userId">Set to the id of the user for which you want to set or reset a password. If you don’t know the user’s id, use the Get Users API call to return all users and their  id values.</param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.SetCustomAttributeValue(System.Int32,OneLogin.Requests.SetCustomAttributeValueRequest)">
            <summary>
            Set a custom attribute field (also known as a custom user field) value for a user.
            The custom attribute field must exist for your account.For details about defining custom user fields in OneLogin, see Custom User Fields.
            </summary>
            <param name="userId">Set to the id of the user for whom you want to set custom attribute values. If you don’t know the user’s id, use the Get Users API call to return all users and their id values.</param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.SetUserState(System.Int32,OneLogin.Requests.SetUserStateRequest)">
            <summary>
            Set the State for a user.
            States describe a stage in a process(such as user account approval). User state determines the possible statuses a user account can be in.
            </summary>
            <param name="userId">Set to the id of the user whose state you want to update. </param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.LogUserOut(System.Int32)">
            <summary>
            Log a user out of any and all sessions.
            </summary>
            <param name="userId">Set to the id of the user that you want to log out. </param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.LockUserAccount(System.Int32,OneLogin.Requests.LockUserAccountRequest)">
            <summary>
            Log a user out of any and all sessions.
            </summary>
            <param name="userId">Set to the id of the user that you want to log out. </param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:OneLogin.OneLoginClient.DeleteUserById(System.Int32)">
            <summary>
            Use this call to delete a user by ID.
            </summary>
            <param name="userId">Set to the id of the user that you want to log out. </param>
            <returns></returns>
        </member>
        <member name="T:OneLogin.Requests.AssignRoleToUserRequest">
            <summary>
            Assign one or more existing roles to a user.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.AssignRoleToUserRequest.RoleIds">
            <summary>
            Set to an array of one or more role IDs. The IDs must be positive integers.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.CreateEventRequest">
            <summary>
            Create an event in the OneLogin event log.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateEventRequest.EventTypeId">
            <summary>
            Set to the ID of the event type you want to create. For a list of valid event type IDs, see Event Resource and Types.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateEventRequest.AccountId">
            <summary>
            Set to your account ID.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateEventRequest.ActorSystem">
            <summary>
            
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateEventRequest.ActorUserId">
            <summary>
            Value must exist in OneLogin.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.CreateSessionLoginToken">
            <summary>
            Use this API to generate a session login token in scenarios in which MFA may or may not be required. Both scenarios are supported. A session login token expires two minutes after creation.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateSessionLoginToken.UsernameOrEmail">
            <summary>
            Set to the username or email of the user that you want to log in.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateSessionLoginToken.password">
            <summary>
            Set to the password of the user that you want to log in.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateSessionLoginToken.subdomain">
            <summary>
            Set to the subdomain of the user that you want to log in.
            For example, if your OneLogin URL is splinkly.onelogin.com, enter splinkly as the subdomain value.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.CreateUserRequest">
            <summary>
            Set of fields to be sent when creating a user. https://developers.onelogin.com/api-docs/1/users/create-user
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.Email">
            <summary>
            User’s email address, which he also uses to log in to OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.Username">
            <summary>
            If the user’s directory is set to authenticate using a user name value, this is the value used to sign in.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.FirstName">
            <summary>
            User’s first name.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.Department">
            <summary>
            The Department the user belongs to.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.GroupId">
            <summary>
            Group to which the user belongs.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.InvalidLoginAttempts">
            <summary>
            Number of sequential invalid login attempts the user has made that is less than or equal to the Maximum invalid login attempts value defined on the Session page in OneLogin.
            When this number reaches this value, the user account will be locked for the amount of time defined by the Lock effective period field on the Session page and this value will be reset to 0.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.LastName">
            <summary>
            User’s last name.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.OpenIdName">
            <summary>
            OpenID URL that can be configured in other applications that accept OpenID for sign-in.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.LocaleCode">
            <summary>
            Represents a geographical, political, or cultural region. Some features may use the locale value to tailor the display of information, such as numbers, for the user based on locale-specific customs and conventions.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.Phone">
            <summary>
            User’s phone number.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.DistinguishedName">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.ExternalId">
            <summary>
            External ID that can be used to uniquely identify the user in another system.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.DirectoryId">
            <summary>
            ID of the directory (Active Directory, LDAP, for example) from which the user was created.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.MemberOf">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.SamAccountName">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.UserPrincipalName">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.CreateUserRequest.ManagerAdId">
            <summary>
            ID of the user’s manager in Active Directory.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.EnrollAnAuthenticationFactorRequest">
            <summary>
            A request to enroll a user with a given authentication factor.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.EnrollAnAuthenticationFactorRequest.FactorId">
            <summary>
            The identifier of the factor to enroll the user with.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.EnrollAnAuthenticationFactorRequest.DisplayName">
            <summary>
            A name for the users device
            </summary>
        </member>
        <member name="P:OneLogin.Requests.EnrollAnAuthenticationFactorRequest.Number">
            <summary>
            The phone number of the user in E.164 format.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.GenerateInviteLinkRequest">
            <summary>
            Generate an invite link for a user that you have already created in your OneLogin account.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.GenerateInviteLinkRequest.Email">
            <summary>
            Set to the user email address to generate an invite link.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.GenerateTokenRequest">
            <summary>
            https://developers.onelogin.com/api-docs/1/oauth20-tokens/generate-tokens
            </summary>
        </member>
        <member name="T:OneLogin.Requests.GetRateLimitRequest">
            <summary>
            https://developers.onelogin.com/api-docs/1/oauth20-tokens/revoke-tokens
            </summary>
        </member>
        <member name="T:OneLogin.Requests.LockUserAccountRequest">
            <summary>
            Use this call to lock a user’s account based on the policy assigned to the user, for a specific time you define in the request, or until you unlock it.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.LockUserAccountRequest.LockedUntil">
            <summary>
            Set to the number of minutes for which you want to lock the user account.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.RefreshTokenRequest">
            <summary>
            https://developers.onelogin.com/api-docs/1/oauth20-tokens/refresh-tokens
            </summary>
        </member>
        <member name="T:OneLogin.Requests.RemoveRoleFromUserRequest">
            <summary>
            Remove one or more existing roles from a user.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.RemoveRoleFromUserRequest.RoleIds">
            <summary>
            Set to an array of one or more role IDs. The IDs must be positive integers.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.RevokeTokenRequest">
            <summary>
            https://developers.onelogin.com/api-docs/1/oauth20-tokens/revoke-tokens
            </summary>
        </member>
        <member name="T:OneLogin.Requests.SendInviteLinkRequest">
            <summary>
            Generate an invite link for a user that you have already created in your OneLogin account.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SendInviteLinkRequest.Email">
            <summary>
            Set to the email address of the user that you want to generate an invite link for.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SendInviteLinkRequest.PersonalEmail">
            <summary>
            If you want to send the invite email to an email other than the one provided in  email, provide it here. The invite link will be sent to this address instead.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.SetCustomAttributeValueRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetCustomAttributeValueRequest.CustomAttributes">
            <summary>
            One or more key value pairs composed of the custom attribute field shortname and the value that you want to set the field 
            </summary>
        </member>
        <member name="T:OneLogin.Requests.SetPasswordByIdUsingCleartextRequest">
            <summary>
            Request to set a users's password with cleartext.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetPasswordByIdUsingCleartextRequest.Password">
            <summary>
            Set to the password value using cleartext.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetPasswordByIdUsingCleartextRequest.PasswordConfirmation">
            <summary>
            Ensure that this value matches the password value exactly.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetPasswordByIdUsingCleartextRequest.ValidatePolicy">
            <summary>
            Defaults to false. This will validate the password against the users OneLogin password policy.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.SetPasswordByIdUsingSaltAndSHA256">
            <summary>
            Request to set a users' password with a salt and hashed code.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetPasswordByIdUsingSaltAndSHA256.Password">
            <summary>
            Set to the password value using a SHA-256-encoded value. If you are including your own password_salt value in your request, prepend the salt value to the cleartext password value before SHA-256-encoding it.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetPasswordByIdUsingSaltAndSHA256.PasswordConfirmation">
            <summary>
            This value must match the password value.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetPasswordByIdUsingSaltAndSHA256.PasswordAlgorithm">
            <summary>
            Set to salt+sha256.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetPasswordByIdUsingSaltAndSHA256.PasswordSalt">
            <summary>
            Optional. If your password hash has been salted then you can provide the salt used in this param.
            This assumes that the salt was prepended to the password before doing the SHA256 hash. The API supports a salt value that is up to 40 characters long.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.SetUserStateRequest">
            <summary>
            Set the State for a user.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.SetUserStateRequest.State">
            <summary>
            Represents the user’s stage in a process (such as user account approval). User state determines the possible statuses a user account can be in.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.UpdateUserByIdRequest">
            <summary>
            Request to authenticate a one-time password (OTP) code provided by a multifactor authentication (MFA) device.
            If this is the first time that the OTP device has been confirmed, then the device will be updated to have a state of enabled.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.Department">
            <summary>
            The Department the user belongs to.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.DirectoryId">
            <summary>
            ID of the directory (Active Directory, LDAP, for example) from which the user was created.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.DistinguishedName">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.Email">
            <summary>
            User’s email address, which he also uses to log in to OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.ExternalId">
            <summary>
            External ID that can be used to uniquely identify the user in another system.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.FirstName">
            <summary>
            User’s first name.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.GroupId">
            <summary>
            Group to which the user belongs.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.InvalidLoginAttempts">
            <summary>
            Number of sequential invalid login attempts the user has made that is less than or equal to the Maximum invalid login attempts value defined on the Session page in OneLogin.
            When this number reaches this value, the user account will be locked for the amount of time defined by the Lock effective period field on the Session page and this value will be reset to 0.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.LastName">
            <summary>
            User’s last name.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.LocaleCode">
            <summary>
            Represents a geographical, political, or cultural region. Some features may use the locale value to tailor the display of information, such as numbers, for the user based on locale-specific customs and conventions.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.ManagerAdId">
            <summary>
            ID of the user’s manager in Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.ManagerUserId">
            <summary>
            ID of the user’s manager in Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.MemberOf">
            <summary>
            Member of
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.Notes">
            <summary>
            Notes
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.OpenIdName">
            <summary>
            OpenID URL that can be configured in other applications that accept OpenID for sign-in.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.Phone">
            <summary>
            User’s phone number.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.SamAccountName">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.State">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.Status">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.Username">
            <summary>
            If the user’s directory is set to authenticate using a user name value, this is the value used to sign in.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.UpdateUserByIdRequest.UserPrincipalName">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="T:OneLogin.Requests.VerifyAnAuthenticationFactorRequest">
            <summary>
            Request to authenticate a one-time password (OTP) code provided by a multifactor authentication (MFA) device.
            If this is the first time that the OTP device has been confirmed, then the device will be updated to have a state of enabled.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.VerifyAnAuthenticationFactorRequest.StateToken">
            <summary>
            The state_token is returned after a successful request to Enroll a Factor or Activate a Factor.
            </summary>
        </member>
        <member name="P:OneLogin.Requests.VerifyAnAuthenticationFactorRequest.OtpToken">
            <summary>
            OTP code provided by the device or SMS message sent to user.
            </summary>
        </member>
        <member name="M:OneLogin.ResponseExtensions.EnsureSuccess``1(``0)">
            <summary>Throws an Exception if Status.Error is true.</summary>
            <returns>Returns the successful BaseStatusResponse.</returns>
        </member>
        <member name="M:OneLogin.ResponseExtensions.InterpolateEvent(OneLogin.Responses.Event,OneLogin.Responses.EventType)">
            <summary>
            Returns a string of the EventType data interpolated with the actualized Event.
            </summary>
            <param name="event">The event.</param>
            <param name="eventType">The set of all event types to </param>
            <returns></returns>
        </member>
        <member name="T:OneLogin.Responses.ActivateAnAuthenticationFactorResponse">
            <summary>
            Use this API to trigger an SMS or Push notification containing a One-Time Password (OTP) that can be used to authenticate a user with the Verify Factor call.  It is only necessary to activate a factor if needs_trigger is returned as true via the Enroll Factor or Get Enrolled Factors calls.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.ActivatedFactor">
            <summary>
            OneLogin provides a series of API endpoints that let you manage MFA for your users. You can enroll multi-factor devices, trigger the sending of One-Time Password (OTP) codes via SMS or Push notification and, Verify codes to authenticate users.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.ActivatedFactor.UserDisplayName">
            <summary>
            Authentication factor display name assigned by users when they register the device.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.ActivatedFactor.Active">
            <summary>
            true = enabled (used successfully for authentication at least once). false = pending (registered but never used).
            </summary>
        </member>
        <member name="P:OneLogin.Responses.ActivatedFactor.StateToken">
            <summary>
            A short lived token that is required to Verify the Factor. This token expires in 120 seconds.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.ActivatedFactor.AuthFactorName">
            <summary>
            "Official" authentication factor name, as it appears to administrators in OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.ActivatedFactor.TypeDisplayName">
            <summary>
            Authentication factor display name as it appears to users upon initial registration, as defined by admins at Settings > Authentication Factors.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.ActivatedFactor.Id">
            <summary>
            User identifier
            </summary>
        </member>
        <member name="P:OneLogin.Responses.ActivatedFactor.DeviceId">
            <summary>
            MFA device identifier.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.BaseResponse`1">
            <summary>
            A base class for all responses that have returnable data.
            </summary>
            <typeparam name="T"></typeparam>
            <inheritdoc cref="T:OneLogin.Responses.BaseStatusResponse" />
        </member>
        <member name="P:OneLogin.Responses.BaseResponse`1.Data">
            <summary>
            Collection of data returned by the API service.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.BaseStatusResponse">
            <summary>
            The base class for all responses that have a status element.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.BaseStatusResponse.Status">
            <summary>
            The status of the request.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.EmptyResponse">
            <summary>
            Response message containing the status of the request.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.EnrollAnAuthenticationFactorResponse">
            <summary>
            If the authentication factor requires confirmation to complete, then the device will have an active state of false otherwise it will have an active state of true (corresponding to devices that are either pending confirmation or not)
            </summary>
        </member>
        <member name="T:OneLogin.Responses.AuthenticationFactor">
            <summary>
            OneLogin provides a series of API endpoints that let you manage MFA for your users. You can enroll multi-factor devices, trigger the sending of One-Time Password (OTP) codes via SMS or Push notification and, Verify codes to authenticate users.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.Active">
            <summary>
            True = enabled (used successfully for authentication at least once). False = pending (registered but never used).
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.Default">
            <summary>
            True = is user’s default MFA device for OneLogin.
            </summary>
            <value><c>true</c> if default; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.StateToken">
            <summary>
            A short lived token that is required to Verify the Factor. This token expires in 120 seconds
            </summary>
            <value>The state token.</value>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.AuthFactorName">
            <summary>
            "Official" authentication factor name, as it appears to administrators in OneLogin.
            </summary>
            <value>The name of the auth factor.</value>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.PhoneNumber">
            <summary>
            For OTP codes sent via SMS, the phone number receiving the SMS message.
            </summary>
            <value>The phone number.</value>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.TypeDisplayName">
            <summary>
            Authentication factor display name as it appears to users upon initial registration, as defined by admins at Settings > Authentication Factors.
            </summary>
            <value>The name of the type display.</value>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.NeedsTrigger">
            <summary>
            true: You MUST Activate this Factor to trigger an SMS or Push notification before Verifying the OTP code.
            false: No Activation required.You can Verify the OTP immediately.
            MFA factors that provide both push notifications (user accepts notification) and pull code submission(user initiates code submission from device or enters it manually) should appear twice; once with needs_trigger: true and once with needs_trigger: false.
            </summary>
            <value><c>true</c> if needs trigger; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.UserDisplayName">
            <summary>
            Authentication factor display name assigned by users when they enroll the device.
            </summary>
            <value>The name of the user display.</value>
        </member>
        <member name="P:OneLogin.Responses.AuthenticationFactor.Id">
            <summary>
            MFA device identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="T:OneLogin.Responses.GenerateInviteLinkResponse">
            <summary>
            Provide the link to the user to enable her to set her password and then access your OneLogin portal.
            <a href="https://developers.onelogin.com/api-docs/1/oauth20-tokens/generate-tokens">Documentation</a>
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GenerateTokensResponse">
            <summary>
            Serialized response to generating a token.
            <a href="https://developers.onelogin.com/api-docs/1/oauth20-tokens/generate-tokens">Documentation</a>
            </summary>
        </member>
        <member name="T:OneLogin.Responses.Token">
            <summary>
            An access token has a rate limit of 5,000 calls per hour. If an access token surpasses this limit, API calls will return an error. After the hour has passed, the count will be reset to a full 5,000 available calls.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Token.AccessToken">
            <summary>
            Provides the requested access token. You can use this token to call our resource APIs.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Token.CreatedAt">
            <summary>
            Time at which the access token was generated.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Token.ExpiresIn">
            <summary>
            Indicates that the generated access token expires in 36,000 seconds, 600 minutes, or 10 hours.
            An expired access token cannot be used to make resource API calls, but it can still be used along with its associated <a href="https://developers.onelogin.com/api-docs/1/oauth20-tokens/refresh-tokens">Refresh Token</a> to call the Refresh Tokens API.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Token.RefreshToken">
            <summary>
            Provides the refresh token that is uniquely paired with the access token. You can use this token to request a refresh to its associated access token.
            For more information about refreshing access tokens, see <a href="https://developers.onelogin.com/api-docs/1/oauth20-tokens/refresh-tokens">Refresh Token</a>.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Token.TokenType">
            <summary>
            Indicates that the generated access token is a bearer token.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Token.AccountId">
            <summary>
            Account ID associated with the API credentials used to generate the token.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GetAppsForUserResponse">
            <summary>
            Get a list of apps accessible by a user, not including personal apps.
            To get a list of apps accessible by a user to embed in your company intranet, for example, see Get Apps to Embed for a User.
            https://developers.onelogin.com/api-docs/1/users/get-apps-for-user
            </summary>
        </member>
        <member name="P:OneLogin.Responses.UserApps.Id">
            <summary>
            ID of the app that can be accessed by the user.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.UserApps.Name">
            <summary>
            Name of the application.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.UserApps.Icon">
            <summary>
            URL to the app’s icon.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.UserApps.Provisioned">
            <summary>
            Indicates whether a username and password has been stored on the login for the app and user.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.UserApps.Extension">
            <summary>
            Indicates whether the app requires the OneLogin browser extension to login.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.UserApps.LoginId">
            <summary>
            User’s ID in the app. For example, in one app the user’s ID may be  georgia.wong@company.com, but in another it may be georgia.wong.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.UserApps.Personal">
            <summary>
            Indicates whether the app is a user’s personal app.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GetAvailableAuthenticationFactorsResponse">
            <summary>
            Use this API to return a list of authentication factors that are available for user enrollment via API.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.AvailableAuthenticationContainer">
            <summary>
            Wrapper object for getting the list of authentication factors.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.AvailableAuthenticationContainer.AuthFactors">
            <summary>
            Collection of all available authentication factors.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.AvailableAuthenticationFactor">
            <summary>
            An available authentication factor.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.AvailableAuthenticationFactor.Name">
            <summary>
            "Official" authentication factor name, as it appears to administrators in OneLogin.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:OneLogin.Responses.AvailableAuthenticationFactor.FactorId">
            <summary>
            Identifier for the factor which will be used for user enrollmen
            </summary>
            <value>The factor identifier.</value>
        </member>
        <member name="T:OneLogin.Responses.GetCustomAttributesResponse">
            <summary>
            Returns a list of all custom attribute fields (also known as custom user fields) that have been defined for your account.
            https://developers.onelogin.com/api-docs/1/users/get-custom-attributes
            </summary>
        </member>
        <member name="P:OneLogin.Responses.OtpDevice.TypeDisplayName">
            <summary>
            Authentication factor display name as it appears to users upon initial registration, as defined by admins at Settings > Authentication Factors.
            </summary>
            <value>The name of the type display.</value>
        </member>
        <member name="P:OneLogin.Responses.OtpDevice.Active">
            <summary>
            true = enabled (used successfully for authentication at least once). false = pending (registered but never used).
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OneLogin.Responses.OtpDevice.UserDisplayName">
            <summary>
            Authentication factor display name assigned by users when they register the device.
            </summary>
            <value>The name of the user display.</value>
        </member>
        <member name="P:OneLogin.Responses.OtpDevice.PhoneNumber">
            <summary>
            For OTP codes sent via SMS, the phone number receiving the SMS message.
            </summary>
            <value>The phone number.</value>
        </member>
        <member name="P:OneLogin.Responses.OtpDevice.AuthFactorName">
            <summary>
            "Official" authentication factor name, as it appears to administrators in OneLogin.
            </summary>
            <value>The name of the auth factor.</value>
        </member>
        <member name="P:OneLogin.Responses.OtpDevice.Id">
            <summary>
            MFA device identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:OneLogin.Responses.OtpDevice.NeedsTrigger">
            <summary>
            true: You MUST Activate this Factor to trigger an SMS or Push notification before Verifying the OTP code.
            false: No Activation required.You can Verify the OTP immediately.
            MFA factors that provide both push notifications (user accepts notification) and pull code submission(user initiates code submission from device or enters it manually) should appear twice; once with needs_trigger: true and once with needs_trigger: false.
            </summary>
            <value><c>true</c> if needs trigger; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:OneLogin.Responses.GetEventsResponse">
            <summary>
            The response with a set of events.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.Event">
            <summary>
            An onelogin event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.Id">
            <summary>
            Event’s unique ID in OneLogin. Autogenerated by OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.CreatedAt">
            <summary>
            Time and date at which the event was created. This value is autogenerated by OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.AccountId">
            <summary>
            Account that triggered the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.UserId">
            <summary>
            ID of the user that was acted upon to trigger the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.EventTypeId">
            <summary>
            Type of event triggered.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.Notes">
            <summary>
            More details about the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.IpAddress">
            <summary>
            IP address of the machine used to trigger the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.ActorUserId">
            <summary>
            ID of the user whose action triggered the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.assuming_acting_user_id">
            <summary>
            Name of the user who assumed the role of the acting user to trigger the event, if applicable.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.role_id">
            <summary>
            ID of a role involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.app_id">
            <summary>
            ID of the app involved in the event, if applicable.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.group_id">
            <summary>
            ID of a group involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.otp_device_id">
            <summary>
            ID of a device involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.policy_id">
            <summary>
            ID of the policy involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.actor_system">
            <summary>
            Acting system that triggered the event when the actor is not a user.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.custom_message">
            <summary>
            More details about the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.role_name">
            <summary>
            Name of a role involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.app_name">
            <summary>
            Name of the app involved in the event, if applicable.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.group_name">
            <summary>
            Name of a group involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.actor_user_name">
            <summary>
            First and last name of the user whose action triggered the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.user_name">
            <summary>
            Name of the user that was acted upon to trigger the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.policy_name">
            <summary>
            Name of the policy involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.otp_device_name">
            <summary>
            Name of a device involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.operation_name">
            <summary>
            Name of operation involved in the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.directory_sync_run_id">
            <summary>
            Directory sync run ID.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.directory_id">
            <summary>
            Event’s unique ID in OneLogin. Autogenerated by OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.resolution">
            <summary>
            Event’s unique ID in OneLogin. Autogenerated by OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.client_id">
            <summary>
            Client ID used to generate the access token that made the API call that generated the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.resource_type_id">
            <summary>
            ID of the resource (user, role, group, and so forth) associated with the event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.error_description">
            <summary>
            Provisioning error details, if applicable.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Event.proxy_ip">
            <summary>
            Event’s unique ID in OneLogin. Autogenerated by OneLogin.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GetEventTypesResponse">
            <summary>
            A list of all OneLogin event types available to the Events API, providing event type names, event type IDs, and descriptions.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.EventType">
            <summary>
            A type of event available in the events API.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.EventType.Id">
            <summary>
            Event types’s unique ID in OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.EventType.Description">
            <summary>
            Describes the meaning of the event type.  This contains user replaceable values to localize to a particular event.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.EventType.Name">
            <summary>
            Event types’s unique name in OneLogin.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.Group">
            <summary>
            Think of groups as departments. Groups enable you to split your user base into smaller pieces that can be more easily managed.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Group.Id">
            <summary>
            Group’s unique ID in OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Group.Name">
            <summary>
            Group name.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Group.Reference">
            <summary>
            Deprecated. Will always display the attribute null.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GetRateLimitResponse">
            <summary>
            https://developers.onelogin.com/api-docs/1/oauth20-tokens/revoke-tokens
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GetRoleResponse">
            <summary>
            Response message the requested role.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GetRolesResponse">
            <summary>
            Response message containing the set of requested roles.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.Role">
            <summary>
            
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Role.Id">
            <summary>
            Role’s unique ID in OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Role.Name">
            <summary>
            Role name.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GetRolesForUser">
            <summary>
            A list of role IDs that have been assigned to a user.
            https://developers.onelogin.com/api-docs/1/users/get-roles-for-user
            </summary>
        </member>
        <member name="T:OneLogin.Responses.GetUserResponse">
            <summary>
            This call returns up to 50 users per page.
            For details about using the pagination element to easily “page” through users, see <a href="https://developers.onelogin.com/api-docs/1/getting-started/using-query-parameters#pagination">Pagination</a>.
            For details about each element in the User resource, see <a href="https://developers.onelogin.com/api-docs/1/users/user-resource">User Resource</a>.
            </summary>
            <inheritdoc cref="T:OneLogin.Responses.PaginationBaseResponse`1" />
        </member>
        <member name="T:OneLogin.Responses.GetUsersResponse">
            <summary>
            This call returns up to 50 users per page.
            For details about using the pagination element to easily “page” through users, see <a href="https://developers.onelogin.com/api-docs/1/getting-started/using-query-parameters#pagination">Pagination</a>.
            For details about each element in the User resource, see <a href="https://developers.onelogin.com/api-docs/1/users/user-resource">User Resource</a>.
            </summary>
            <inheritdoc cref="T:OneLogin.Responses.PaginationBaseResponse`1" />
        </member>
        <member name="T:OneLogin.Responses.User">
            <summary>
            A user of the Onelogin platform.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.ActivatedAt">
            <summary>
            Date and time at which the user’s status was set to 1 (active).
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.CreatedAt">
            <summary>
            Date and time at which the user was created.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.Email">
            <summary>
            User’s email address, which he also uses to log in to OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.UserName">
            <summary>
            If the user’s directory is set to authenticate using a user name value, this is the value used to sign in.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.FirstName">
            <summary>
            User’s first name.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.GroupId">
            <summary>
            Group to which the user belongs.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.Id">
            <summary>
            User’s unique ID in OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.InvalidLoginAttempts">
            <summary>
            Number of sequential invalid login attempts the user has made that is less than or equal to the Maximum invalid login attempts value defined on the Session page in OneLogin.
            When this number reaches this value, the user account will be locked for the amount of time defined by the Lock effective period field on the Session page and this value will be reset to 0.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.InvitationSentAt">
            <summary>
            Date and time at which an invitation to OneLogin was sent to the user.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.LastLogin">
            <summary>
            Date and time of the user’s last login.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.LastName">
            <summary>
            User’s last name.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.LockedUntil">
            <summary>
            Date and time at which the user’s account will be unlocked.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.Comment">
            <summary>
            Notes entered about the user.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.OpenIdName">
            <summary>
            OpenID URL that can be configured in other applications that accept OpenID for sign-in.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.LocaleCode">
            <summary>
            Represents a geographical, political, or cultural region. Some features may use the locale value to tailor the display of information, such as numbers, for the user based on locale-specific customs and conventions.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.PasswordChangedAt">
            <summary>
            Date and time at which the user’s password was last changed.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.Phone">
            <summary>
            User’s phone number.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.Status">
            <summary>
            Determines the user’s ability to log in to OneLogin.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.UpdatedAt">
            <summary>
            Date and time at which the user’s information was last updated.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.MemberOf">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.SamAccountName">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.UserPrincipalName">
            <summary>
            Synchronized from Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.ManagerAdId">
            <summary>
            ID of the user’s manager in Active Directory.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.RoleId">
            <summary>
            Role IDs to which the user is assigned.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.State">
            <summary>
            Represents the user’s stage in a process (such as user account approval). User state determines the possible statuses a user account can be in.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.User.CustomAttributes">
            <summary>
            Provides a list of custom attribute fields (also known as custom user fields) that are available for your account.
            The values returned correspond to the values you provided in the Shortname field when you defined the custom user field.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.Pagination">
            <summary>
            When you call a resource API, the response message will include a pagination element like the one shown here:
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Pagination.BeforeCursor">
            <summary>
            You can use the before_cursor value as a query parameter to retrieve the previous page of results.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Pagination.AfterCursor">
            <summary>
            You can use the after_cursor value as a query parameter to make a call to retrieve the next page, or set, of results.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Pagination.PreviousLink">
            <summary>
            The  previous_link value provides a premade request URL for your convenience.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Pagination.NextLink">
            <summary>
            The next_link value provides a premade endpoint URL using the after_cursor value, for your convenience.
            </summary>
        </member>
        <member name="T:OneLogin.Responses.PaginationBaseResponse`1">
            <summary>
            A base class for Responses that are pageable.
            </summary>
            <typeparam name="T"></typeparam>
            <inheritdoc cref="T:OneLogin.Responses.BaseResponse`1" />
        </member>
        <member name="P:OneLogin.Responses.PaginationBaseResponse`1.Pagination">
            <summary>
            When you call a resource API, the response message will include a pagination element like the one shown here:
            </summary>
        </member>
        <member name="T:OneLogin.Responses.IPageable">
            <summary>
            Interface for Response that are pageable.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.IPageable.Pagination">
            <summary>
            When you call a resource API, the response message will include a pagination element like the one shown here:
            </summary>
        </member>
        <member name="T:OneLogin.Responses.RefreshTokenResponse">
            <summary>
            https://developers.onelogin.com/api-docs/1/oauth20-tokens/refresh-tokens
            </summary>
        </member>
        <member name="T:OneLogin.Responses.Status">
            <summary>
            An contract for the common status schema returned from the API.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Status.Error">
            <summary>
            Status Code greater than or equal to 400.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Status.Code">
            <summary>
            Http Status Code
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Status.Type">
            <summary>
            The type of status.  Usually of type "success" for 200 "Ok" responses.
            </summary>
        </member>
        <member name="P:OneLogin.Responses.Status.Message">
             <summary>
             Additional information about the response which may include why it failed or if it succeeded.
             </summary>
            
        </member>
        <member name="T:OneLogin.Responses.WebhookResponse">
            <summary>
            An array of Event objects is sent to your registered endpoint as a POST request.
            </summary>
        </member>
        <member name="T:OneLogin.Types.ProvisionedTypes">
            <summary>
            Indicates whether a username and password has been stored on the login for the app and user.
            </summary>
        </member>
        <member name="F:OneLogin.Types.ProvisionedTypes.No">
            <summary>
            No
            </summary>
        </member>
        <member name="F:OneLogin.Types.ProvisionedTypes.Yes">
            <summary>
            Yes
            </summary>
        </member>
        <member name="T:OneLogin.Types.State">
            <summary>
            Represents the user’s stage in a process (such as user account approval).
            User state determines the possible statuses a user account can be in.
            </summary>
        </member>
        <member name="F:OneLogin.Types.State.Unapproved">
            <summary>
            Unapproved
            </summary>
        </member>
        <member name="F:OneLogin.Types.State.Approved">
            <summary>
            Approved
            </summary>
        </member>
        <member name="F:OneLogin.Types.State.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:OneLogin.Types.State.Unlicensed">
            <summary>
            Unlicensed
            </summary>
        </member>
        <member name="T:OneLogin.Types.StatusType">
            <summary>
            Determines the user’s ability to log in to OneLogin.
            </summary>
        </member>
        <member name="F:OneLogin.Types.StatusType.Unactivated">
            <summary>
            Unactivated
            </summary>
        </member>
        <member name="F:OneLogin.Types.StatusType.ActiveOnly">
            <summary>
             Active Only. users assigned this status can log in to OneLogin.
            </summary>
        </member>
        <member name="F:OneLogin.Types.StatusType.Suspended">
            <summary>
            Suspended
            </summary>
        </member>
        <member name="F:OneLogin.Types.StatusType.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="F:OneLogin.Types.StatusType.PasswordExpired">
            <summary>
            Password expired
            </summary>
        </member>
        <member name="F:OneLogin.Types.StatusType.AwaitingPasswordReset">
            <summary>
            Awaiting password reset. The user is required to reset their password
            </summary>
        </member>
        <member name="F:OneLogin.Types.StatusType.PasswordPending">
            <summary>
            Password Pending. The user has not yet set a password
            </summary>
        </member>
        <member name="F:OneLogin.Types.StatusType.SecurityQuestionsRequired">
            <summary>
            Security questions required. The user has not yet set their security questions
            </summary>
        </member>
    </members>
</doc>
